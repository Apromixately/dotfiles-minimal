#!/bin/sh

# This script uses Lastpass's "lpass" program and the JSON parser "jq".
# You will need a lastpass entry for "Github - Create Repo" that contains
# your username and auth token: https://github.com/settings/tokens

# USAGE:
#   $ github-newrepo
#
#   creates a github public repo using the current directory name as the
#   repository name
#
#   $ github-newrepo <reponame> "<description>"
#
#   creates a github public repo named <reponame> with a description

if command -v lpass > /dev/null 2>&1 && command -v jq > /dev/null 2>&1; then
  repo="${1:-$(basename "$PWD")}"
  desc="${2}"
  user="$(lpass show --username "Github - Create Repo")"
  pass="$(lpass show --pass "Github - Create Repo")"
  if [ -n "$user" ]; then
    remote="$(curl -su "${user}:${pass}" "https://api.github.com/user/repos" -d "{\"name\":\"$repo\", \"description\":\"$desc\"}" | jq -r .full_name)"
    if [ -n "$remote" ] && [ "$remote" != "null" ]; then
      reporemote="$(printf "git@github.com:%s.git" "${remote}")"
      if [ -d .git ] || git rev-parse --git-dir > /dev/null 2>&1; then
        if git remote | grep -q origin; then
          printf "%s remote repository created, but you already have 'origin' set.\\n" "$remote"
        else
          git remote add origin "$reporemote"
          printf "remote repository created and added as 'origin': %s\\n" "$remote"
        fi
      else
        git init
        git remote add origin "$reporemote"
        printf "local and remote repository created and linked as 'origin': %s\\n" "$remote"
      fi
    else
      printf "username or password failed.\\n"
    fi
  else
    printf "username or password not found for Github.\\n"
  fi
else
  printf "this script requires lastpass-cli and jq to be installed.\\n"
fi
